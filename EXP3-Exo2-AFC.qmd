---
title: "Exo 2 : Distribution des langues au Bénin en 2013 (AFC-CAH)"
author: "France Guérin-Pace "
format: html
embed-resources: true
bibliography: references.bib
---

```{r, echo=FALSE, message =F, warning=F,error=FALSE}
knitr::opts_chunk$set(echo = FALSE)
library(knitr,quietly = T,warn.conflicts = T)
library(dplyr,quietly = T,warn.conflicts = T)
#library(reshape2,quietly = T,warn.conflicts = T)
#library(ggplot2,quietly = T,warn.conflicts = T)
#library(kableExtra)
library(FactoMineR)
```

## Introduction 
Le but de cet exercice est :

1. De montrer les commandes R permettant de réaliser une Analayse Factorielle des Correspondances (AFC) sous R
2. D'apprendre à interpréter les résultats de cette AFC
3. De compléter l'analyse par une Classification Ascendante Hiérarchique sur les axes de l'AFC. 

En préalable à cet exercice il est indispensable d'avoir bien maîtrisé les fondements théoriques des deux méthodes d'AFC et de CAH en métrique du chi-2. Ces enseignements n'étant pas détaillé sur le présent site, nous recommandons de se reporter au MOOC de cours de François Husson en suivant les liens suivants

- [Cours sur l'AFC](https://husson.github.io/MOOC_AnaDo/AFC.html)
- [Cours sur la classification](https://husson.github.io/MOOC_AnaDo/classif.html)

## DONNEES

On charge un tableau décrivant le nombre de personnes parlant une langue ou un groupe de langues en 2002. Les chiffres sont exprimés en milliers et les valeurs arrondies.

```{r tab1, fig.subcap="Source : Amadou Sanni, 2002"}
don<-read.csv2("LAN-BENIN-2013/LAN-BENIN-2002-NIV1.csv")
kable(don,caption = "Tableau de données original")
```

### Tableau de contingence (Nij)

On crée un **tableau de contingence forman**t une matrice, c'est-à-dire que l'on ne garde que les variables quantitatives dont on peut effectuer les totaux en ligne et en colonnes.

```{r}
tab<-as.matrix(don[,3:11])
row.names(tab)<-don$admin1
kable(addmargins(tab),caption="Tableau de contingence (Nij)")

```

### Profils en ligne (Nij/Ni.)

On crée un tableau de profils en ligne :

```{r}
tabrow<-100*prop.table(tab, margin=1)
kable(addmargins(tabrow,2), caption = "Profils en ligne (Nij/Ni.) en %", digits=1)
```

### Profils en colonne (Nij/N.j)

On crée un tableau de profils en colonne :

```{r}
tabcol<-100*prop.table(tab, margin=2)
kable(addmargins(tabcol,1), caption = "Profils en colonnes (Nij/N.j) en %", digits=1)
```

### Profil total (Nij/N..)

On crée un tableau de profils en colonne :

```{r}
tabtot<-100*tab/sum(tab)
kable(addmargins(tabtot), caption = "Part du total (Nij/N..) en %", digits=1)
```

## Analyse bivariée

Le tableau étant un tableau de contingence, on peut effectuer sur celui-ci un test du chi-2.

```{r}
test<-chisq.test(tab)
test
```

### Valeurs théoriques

```{r}
tabest<-as.matrix(test$expected)
kable(addmargins(tabest), caption = "Valeurs théoriques N*ij = (Nij x N.j) /N..", digits=1)
```

### Résidus absolus

```{r}
tabres<-tab-tabest
kable(addmargins(tabres), caption = "Résidus absolus (Nij - N*ij)", digits=1)
```

### Chi2 par cellule

```{r}
tabchi2<-((tab-tabest)**2)/tabest
kable(addmargins(tabchi2), caption = "Chi_2 = (Nij-N*ij)2 / N*ij", digits=1)
```

### Contributions au chi2

```{r}
tabchi2ctr<-100*tabchi2/sum(tabchi2)
kable(addmargins(tabchi2ctr), caption = "% du chi_2 total du tableau (contribution)", digits=2)
```



## Analyse Factorielle des Correspondances (AFC)

Elle est facile à réaliser à l'aide de la fonction **CA()** du package`FactomineR`:

```{r}
afc<-CA(tab,graph = F)
```

### Valeurs propres

```{r}
barplot(afc$eig[,2],ylab = "% information", main="Hiérarchie des Facteurs",cex.axis = 0.7)
kable(afc$eig,
      col.names = c("Valeur propre", "% variance", "% variance cumulée"),
      digits=2,
      caption = "Tableau des valeurs propres")
```

### Relation des colonnes avec les facteurs

```{r}
coo_1<-afc$col$coord[,1]
coo_2<-afc$col$coord[,2]
coo_3<-afc$col$coord[,3]
ctr_1<-afc$col$contrib[,1]
ctr_2<-afc$col$contrib[,2]
ctr_3<-afc$col$contrib[,3]
cos2_1<-afc$col$cos2[,1]
cos2_2<-afc$col$cos2[,2]
cos2_3<-afc$col$cos2[,3]

df<-data.frame(coo_1,ctr_1,cos2_1,coo_2,ctr_2,cos2_2,coo_3,ctr_3,cos2_3)
kable(df,digits = 2,
      caption = "Relations entre colonnes et facteurs"
      )
```

### Relation des lignes avec les facteurs

```{r}
coo_1<-afc$row$coord[,1]
coo_2<-afc$row$coord[,2]
coo_3<-afc$row$coord[,3]
ctr_1<-afc$row$contrib[,1]
ctr_2<-afc$row$contrib[,2]
ctr_3<-afc$row$contrib[,3]
cos2_1<-afc$row$cos2[,1]
cos2_2<-afc$row$cos2[,2]
cos2_3<-afc$row$cos2[,3]

df<-data.frame(coo_1,ctr_1,cos2_1,coo_2,ctr_2,cos2_2,coo_3,ctr_3,cos2_3)
kable(df,digits = 2,
      caption = "Relations entre lignes et facteurs"
      )
```

## Classification Ascendante Hiérarchique (CAH)

On peut poursuivre l'analyse en réalisant une classificiation des départements ou des langues en fonction de leur ressemblance selon le critère de Ward.

### Classification des colonnes

```{r}
CAH_col<-HCPC(afc,nb.clust = 3,cluster.CA = "columns")
CAH_col$desc.var
```

### Classification des lignes

```{r}
CAH_row<-HCPC(afc,nb.clust = 3,cluster.CA = "rows")
CAH_row$desc.var

```


